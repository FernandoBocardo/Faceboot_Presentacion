/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUIs;

import Dominio.Usuario;
import Dominio.UsuarioEtiquetado;
import Negocios.PublicacionBuilder;
import utils.Conexion;
import eventManagers.EventManagerNotificacionPublicacionRegistrado;
import java.io.File;
import utils.iEventListener;
import java.net.Socket;
import java.util.ArrayList;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.JOptionPane;
import utils.Controlador;

/**
 *
 * @author Fernando
 */
public class FrmRegistrarPublicacion extends javax.swing.JFrame implements iEventListener{

    private Conexion conexion;
    private EventManagerNotificacionPublicacionRegistrado eventManagerNotificacionPublicacionRegistrado;
    private byte[] imagenSeleccionada;
    private String usuario;
    private boolean cerrar = true;
    
    /**
     * Creates new form FrmRegistrarPublicacion
     */
    public FrmRegistrarPublicacion(Conexion conexion, String usuario) {
        initComponents();
        this.conexion = conexion;
        this.usuario = usuario;
        this.conexion.iniciarNotificador();
        this.eventManagerNotificacionPublicacionRegistrado = EventManagerNotificacionPublicacionRegistrado.getInstance(conexion, "notificarRegistroPublicacion");
        this.eventManagerNotificacionPublicacionRegistrado.subscribe("notificarRegistroPublicacion", this);
    }

    private FrmRegistrarPublicacion() {
    }

    @Override
    public void update(String eventType, String contenido, String usuarioJson) {
        JOptionPane.showMessageDialog(this, "La publicación se ha registrado correctamente", "Publicacion registrada", JOptionPane.INFORMATION_MESSAGE);
        eventManagerNotificacionPublicacionRegistrado.unsubscribe("notificarRegistroPublicacion", this);
        new FrmMuro(conexion, this.usuario).setVisible(true);
        cerrar = false;
        this.dispose();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaContenido = new javax.swing.JTextArea();
        btnPublicar = new javax.swing.JButton();
        btnSeleccionarImagen = new javax.swing.JButton();
        lblImagenSeleccionada = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setText("Mensaje de la publicacion:");

        txtaContenido.setColumns(20);
        txtaContenido.setRows(5);
        jScrollPane1.setViewportView(txtaContenido);

        btnPublicar.setText("Publicar");
        btnPublicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPublicarActionPerformed(evt);
            }
        });

        btnSeleccionarImagen.setText("Seleccionar");
        btnSeleccionarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarImagenActionPerformed(evt);
            }
        });

        lblImagenSeleccionada.setText("Ningún archivo seleccionado (Máximo 5MB)");

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSeleccionarImagen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblImagenSeleccionada)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 182, Short.MAX_VALUE)
                        .addComponent(btnCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPublicar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPublicar)
                    .addComponent(btnSeleccionarImagen)
                    .addComponent(lblImagenSeleccionada)
                    .addComponent(btnCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPublicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPublicarActionPerformed
        if(txtaContenido.getText().equals("") || txtaContenido == null)
        {
            JOptionPane.showMessageDialog(this, "Por introduzca un mensaje", 
                    "Mensaje Vacio", 
                    JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            PublicacionBuilder publicacionBuilder = new PublicacionBuilder();
            publicacionBuilder.buildMensaje(txtaContenido.getText());
            publicacionBuilder.buildImagen(imagenSeleccionada);
            publicacionBuilder.buildEtiquetas(Controlador.getInstance().generarEtiquetas(txtaContenido.getText()));
            publicacionBuilder.buildFechaHora(new GregorianCalendar());
            publicacionBuilder.buildUsuariosEtiquetados(Controlador.getInstance().generarUsuariosEtiquetados(txtaContenido.getText()));
            this.conexion.enviarEventoPublicaciones("registrarPublicacion", Controlador.getInstance().publicacionToJson(publicacionBuilder.getResultado()), usuario);
        }
        
    }//GEN-LAST:event_btnPublicarActionPerformed

    private void btnSeleccionarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarImagenActionPerformed
        File archivoImagenSeleccionada = Controlador.getInstance().elegirImagen(this);
        String nombreImagen = Controlador.getInstance().recortarNombreImagen(archivoImagenSeleccionada.getName());
        lblImagenSeleccionada.setText(nombreImagen);
        imagenSeleccionada = Controlador.getInstance().imagenToByte(archivoImagenSeleccionada);
    }//GEN-LAST:event_btnSeleccionarImagenActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        eventManagerNotificacionPublicacionRegistrado.unsubscribe("notificarRegistroPublicacion", this);
        new FrmMuro(conexion, this.usuario).setVisible(true);
        cerrar = false;
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        if(cerrar)
        {
            this.conexion.enviarEventoPublicaciones("desconectarse", "desconectarse", "desconectarse");
            conexion.desconectarSockets();
            conexion.detenerNotificador();
        }
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrarPublicacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrarPublicacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrarPublicacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrarPublicacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmRegistrarPublicacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnPublicar;
    private javax.swing.JButton btnSeleccionarImagen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblImagenSeleccionada;
    private javax.swing.JTextArea txtaContenido;
    // End of variables declaration//GEN-END:variables
}
